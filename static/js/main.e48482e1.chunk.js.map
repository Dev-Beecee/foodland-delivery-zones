{"version":3,"sources":["components/FormData.tsx","components/FormLivrer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["dotenv","config","useStyles","makeStyles","dropZone","width","height","opacity","position","zIndex","dzOverlay","border","borderRadius","fontFamily","color","top","right","textAlign","padding","FormData","useState","coordinates","setCoordinates","statut","setStatut","classes","undefined","selectedFile","setSelectedFile","useForm","register","handleSubmit","watch","onSubmit","data","a","console","log","file","text","then","nfCoords","split","coords","slice","length","reverse","map","item","lat","Number","lng","axios","method","headers","process","APIKEY","url","idBusiness","responseType","enabled","name","zoneName","address","type","price","minimum","min","JSON","stringify","schedule","lapses","open","hour","minute","close","response","status","catch","err","error","Form","className","Label","FormControl","ref","placeholder","id","onChange","e","target","checked","files","Button","variant","FormLivrer","driverGroups","setDriverGroups","errors","randomLength","Math","floor","random","password","generatePassword","options","body","lastname","email","cellphone","level","city_id","location","drivergroups","0","fetch","res","json","driversOptions","window","addEventListener","out","groups","result","group","Row","Col","sm","Control","Group","required","aria-describedby","value","App","query","search","urlParam","URLSearchParams","Container","has","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e48482e1.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/styles\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { Button, Form, FormControl } from \"react-bootstrap\";\nimport { useForm } from \"react-hook-form\";\nimport dotenv from 'dotenv';\n\ndotenv.config()\n\nconst useStyles = makeStyles({\n  dropZone: {\n    width: \"300px\",\n    height: \"100px\",\n    opacity: \"0\",\n    position: \"relative\",\n    zIndex: 1,\n  },\n  dzOverlay: {\n    width: \"300px\",\n    height: \"100px\",\n    border: \"solid 3px white\",\n    borderRadius: \"25px\",\n    fontFamily: \"cursive\",\n    color: \"#black\",\n    position: \"absolute\",\n    top: \"494px\",\n    right: \"810px\",\n    textAlign: \"center\",\n    padding: \"5px\",\n  },\n});\n\nconst FormData = (): JSX.Element => {\n  const [coordinates, setCoordinates] = useState({});\n  const [statut, setStatut] = useState(false);\n  const classes = useStyles();\n  const [selectedFile, setSelectedFile]: any = useState(undefined);\n  \n  const handleClick = (e: { target: any }): any => {\n    const file = e.target.files[0];\n    file.text().then((text: string) => console.log(text));\n    setSelectedFile(file);\n  };\n\n  function dropZone() {\n    if (selectedFile && selectedFile.name) {\n      return <div>{selectedFile.name}</div>;\n    } else {\n      return (\n        <div className={classes.dzOverlay}>\n          Glissez votre fichier kml ici <br />\n          ou\n          <br />\n          Cliquez pour ajouter\n        </div>\n      );\n    }\n  }\n  const { register, handleSubmit, watch } = useForm();\n  const onSubmit = async (data: any) => {\n    console.log(data);\n    const file = data.file[0];\n    if(file){\n      await file.text().then((text: string) => {\n        let nfCoords = text.split(\"<coordinates>\")[1].split(\"</coordinates>\")[0];\n        let coords = nfCoords\n          .split(\"\\n\")\n          .slice(1, nfCoords.split(\"\\n\").length - 1)\n          .reverse()\n          .map((item) => {\n            return { lat: Number(item[1]), lng: Number(item[0]) };\n          });\n        setCoordinates(coords);\n      });\n      axios({\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json',\n          'x-api-key': process.env.APIKEY,\n        },\n        url: `https://apiv4.ordering.co/v400/en/foodland/business/${data.idBusiness}/deliveryzones`,\n        responseType:'json',\n        data: {\n          enabled: data.enabled,\n          name: data.zoneName,\n          address: data.address,\n          type: 2,\n          price: data.price,\n          minimum: data.min,\n          data: JSON.stringify(coordinates),\n          schedule: JSON.stringify({enabled : true, lapses : {open : {hour:0 , minute:0}, close : {hour:23 , minute:59}}})\n        }\n      }).then(response => console.log(response.status))\n        .catch(err => console.error(err));\n    };\n    console.log(watch(\"example\"));\n  }\n  return (\n    <>\n      <Form onSubmit={handleSubmit(onSubmit)} className=\"col\">\n        <Form.Label>id du Restaurant</Form.Label>\n        <FormControl\n          ref={register}\n          name=\"idBusiness\"\n          type=\"text\"\n          placeholder=\"id du restaurant\"\n        />\n\n        <Form.Label>Nom de la zone</Form.Label>\n        <input\n          ref={register}\n          name=\"zoneName\"\n          type=\"text\"\n          className=\"form-control\"\n        />\n\n        <Form.Label>Adresse</Form.Label>\n        <input\n          ref={register}\n          name=\"address\"\n          type=\"text\"\n          className=\"form-control\"\n        />\n\n        <Form.Label>Prix minimum</Form.Label>\n        <input ref={register} name=\"min\" type=\"text\" className=\"form-control\" />\n\n        <Form.Label>Prix</Form.Label>\n        <input\n          ref={register}\n          name=\"price\"\n          type=\"text\"\n          className=\"form-control\"\n        />\n        <label> statut de la zone </label>\n        <div className=\"form-check form-switch\">\n          <input ref={register} name=\"enabled\" className=\"form-check-input mx-2\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" onChange={(e) => {setStatut(e.target.checked);}}/>\n          <label>{statut?  'active' : 'désactivé'}</label>\n        </div>\n        <div className=\"d-flex flex-column justify-content-center align-items-center my-5\">\n          <label></label>\n          <input\n            ref={register}\n            type=\"file\"\n            name=\"file\"\n            className={classes.dropZone}\n            onChange={handleClick}\n          />\n          {dropZone()}\n        </div>\n        <Button variant=\"success\" type=\"submit\" className=\"my-2\">\n          {\" \"}\n          Envoyer{\" \"}\n        </Button>\n      </Form>\n    </>\n  );\n};\nexport default FormData;\n","import { Col, Form } from \"react-bootstrap\";\nimport { useForm } from \"react-hook-form\";\nimport generatePassword  from \"password-generator\";\nimport { useState } from \"react\";\nimport dotenv from 'dotenv';\n\n\ndotenv.config()\n\nexport const FormLivrer = () : JSX.Element => {\n    const [driverGroups , setDriverGroups] = useState<{id: Number, name: String}[]>();\n    const { register, handleSubmit, watch, errors } = useForm();\n    const onSubmit = async (data : any) => {\n        console.log(data);\n        const maxLength = 18;\n        const minLength = 8;\n        let randomLength = Math.floor(Math.random() * (maxLength - minLength)) + minLength;\n        let password = generatePassword(randomLength, false, /[\\w\\d?-]/, `${data.name[0]}-`);\n        \n        const url = 'https://apiv4.ordering.co/v400/en/foodland/users';\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'x-api-key': 'sMbNsNE6X7eq3kNJwSh0YtSdM7dWv81BB5_Vrb0dpKkk1bkqcisngoF01uCxbXwSy' \n            },\n            body: JSON.stringify({\n               name: data.name,\n               lastname: data.lastname,\n               email: data.email,\n               password: password,\n               cellphone: data.cellphone,\n               level : 4,\n               city_id: 1,\n               location: JSON.stringify({lat: 0, lng: 1}),\n               drivergroups: { 0: {id : data.drivergroups}}\n\n               \n            })\n        }\n        fetch(url, options)\n            .then(res => res.json())\n            .then(json => console.log(json))\n            .catch(err => console.error(err))\n        console.log(watch(\"example\"));\n    }\n        const driverUrl = 'https://apiv4.ordering.co/v400/en/foodland/drivergroups';\n        const driversOptions = {\n            method: 'GET',\n            headers: {\n                'x-api-key': 'sMbNsNE6X7eq3kNJwSh0YtSdM7dWv81BB5_Vrb0dpKkk1bkqcisngoF01uCxbXwSy',\n            }\n          };\n        window.addEventListener('load' , () => {\n\n            fetch(driverUrl , driversOptions)\n                .then(res => res.json())\n                .then((out) =>{\n                    let groups: {id: Number, name: String}[] = out.result.map( (group: { id: Number; name: String; }) => {\n                        return {\n                            id : group.id,\n                            name : group.name,\n                        }\n                    });\n                    setDriverGroups(groups)\n                })\n        })\n\n    return (\n        <>\n            <h1>Créer un livreur</h1>\n            <Form onSubmit={handleSubmit(onSubmit)} className=\"d-flex flex-column\">\n                <Form.Row className=\"row my-2\">\n                    <Col sm={6}>\n                        {errors.email && <span className=\"text-danger text-center\">Email requis</span>}\n                        <Form.Control ref={register} name=\"lastname\" type=\"text\" placeholder=\"Nom*\"/>\n                    </Col>\n                    <Col sm={6}>                    \n                        <Form.Control ref={register} name=\"name\" type=\"text\" placeholder=\"Prénom\" />\n                    </Col>\n                </Form.Row>\n                <Form.Group className=\"input-group my-2\">\n                    {errors.email && <span className=\"text-danger text-center\">Email requis</span>}\n                    <span className=\"input-group-text\">@</span>\n                    <Form.Control ref={register({required : true})} name=\"email\" type=\"text\" aria-describedby=\"inputGroupPrepend\" placeholder=\"email*\"/>\n                </Form.Group>\n                \n                <Form.Control ref={register} name=\"cellphone\" type=\"text\" placeholder=\"Telephone\" className=\"my-2\"/>\n                \n                <select ref={register} name=\"drivergroups\" className=\"form-select\" onChange={(e) => console.log(e.target.value)}>\n                    {driverGroups?.map((item : any)=>(\n                        <option value={item.id}>{item.name}</option>\n                    ))}\n                </select>\n                <input type=\"submit\" className=\"btn btn-success my-5\" value=\"créer\"/>\n\n            </Form>\n        </>\n    )\n};\n","import React from 'react';\nimport './App.css';\nimport FormData from './components/FormData';\nimport { Container } from \"react-bootstrap\";\nimport { FormLivrer } from './components/FormLivrer';\n\nfunction App() {\n\n  const query = window.location.search;\n  const urlParam = new URLSearchParams(query);\n  return (\n    <div className=\"App bg-secondary\">\n      <Container>\n        <div className=\"col-sm-6 d-flex flex-column justify-content-center align-items-center w-100 my-5 bg-dark text-white rounded shadow-lg\">\n          {urlParam.has('beecee-livraison')? <FormData/> : <FormLivrer/>}\n        </div>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}